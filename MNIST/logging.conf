# #./logging.conf

# #记录器：提供应用程序代码直接使用的接口
# #设置记录器名称，root必须存在！！！
[loggers]
keys=root,trainLog,testLog,inferenceLog

# #处理器，将记录器产生的日志发送至目的地
# #设置处理器类型
[handlers]
keys=fileHandlerTrain,fileHandlerTest,fileHandlerInference,fileHandlerRoot,consoleHandler

# #格式化器，设置日志内容的组成结构和消息字段
# #设置格式化器的种类
[formatters]
keys=simpleFormatter

# #设置记录器root的级别与种类
[logger_root]
level=DEBUG
handlers=fileHandlerRoot,consoleHandler
qualname=rootLog
propagate=0

# #设置记录器log的级别与种类
[logger_trainLog]
level=DEBUG
handlers=fileHandlerTrain,consoleHandler
# #起个对外的名字
qualname=trainLog
# #继承关系
propagate=0

[logger_testLog]
level=DEBUG
handlers=fileHandlerTest,consoleHandler
qualname=testLog
propagate=0

[logger_inferenceLog]
level=DEBUG
handlers=fileHandlerInference,consoleHandler
qualname=inferenceLog
propagate=0

# #设置Handler
[handler_consoleHandler]
class=StreamHandler
args=(sys.stdout,)
level=DEBUG

[handler_fileHandlerRoot]
class=handlers.TimedRotatingFileHandler
# 系统将通过为文件名添加扩展名来保存旧日志文件,
# 扩展名是基于日期和时间的, 根据轮换间隔的长短使用 
# strftime 格式 %Y-%m-%d_%H-%M-%S 或是其中有变动的部分
# suffix=
args=("logs/rootLog.log", "midnight", 1, 0, "UTF-8")
level=DEBUG
formatter=simpleFormatter

[handler_fileHandlerTrain]
class=handlers.TimedRotatingFileHandler
args=("logs/trainLog.log", "midnight", 1, 0, "UTF-8")
level=DEBUG
formatter=simpleFormatter

[handler_fileHandlerTest]
class=handlers.TimedRotatingFileHandler
args=("logs/testLog.log", "midnight", 1, 0, "UTF-8")
level=DEBUG
formatter=simpleFormatter

[handler_fileHandlerInference]
class=handlers.TimedRotatingFileHandler
args=("logs/inferenceLog.log", "midnight", 1, 0, "UTF-8")
level=DEBUG
formatter=simpleFormatter

# #循环日志文件以文件大小来分割每隔 1000 Bytes 划分一个日志文件，备份文件为 5 个
# #app.log, app.log.1, app.log.2 直至 app.log.5
# [handler_fileHandlerTrain]
# class=logging.handlers.RotatingFileHandler
# args = ("logs/trainLog.log", 'a', 100, 5, 'UTF-8')
# level=DEBUG
# formatter=simpleFormatter

# #设置日志的格式
[formatter_simpleFormatter]
format=[%(asctime)s]-[%(name)s][%(levelname)s]-[%(process)d:%(processName)s][%(thread)d:%(threadName)s]-[%(message)s]-%(pathname)s

# logging 的四大组件:
# ===========================================================================
# 组件名称	  对应类名	  功能描述
# -------------------------------------------------------------------------
# 日志器	  Logger	提供了应用程序可一直使用的接口
# 处理器	  Handler	将logger创建的日志记录发送到合适的目的输出
# 过滤器	  Filter	提供了更细粒度的控制工具来决定输出哪条日志记录，丢弃哪条日志记录
# 格式器	  Formatter	决定日志记录的最终输出格式
# ===========================================================================
